<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.HtmlRenderDependencies</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Renders all dependencies of the given package.</description>
        <name>HtmlRenderDependencies</name>
        <script><![CDATA[function HtmlRenderDependencies(vPackage)
{
	var oPackage = GetPackageDependencyTree(vPackage);

	if (IsObject(oPackage) == false)
	{
		return HtmlRenderError('Could not identify the given package or its dependencies!');
	}

	var strHtml = '';
	var bError = false;
			
	function HtmlRenderPackage(oPackage,nLevel)
	{
		nLevel = GetIntegerValue(nLevel);
		var nLeft = nLevel * 30;

		var strHtml = '';
		
		strHtml += '<div style="margin-left: '+nLeft+'px; margin-right: 10px; margin-bottom:5px; padding-top: 5px; padding-bottom: 2px; padding-left: 20px; padding-right:15px; background-color: #EEEEEE; border-radius: 10px;">';
		
		var strVersion = ' ' + GetStringValue(oPackage.version);
		
		var strAppName = GetValue(oPackage,'name');
		if (nLevel == 0)
		{
			strAppName += ' ' + strVersion;
		}
		
		var strAppUrl = GetInstanceRecordURL('sys_package',oPackage.sys_id,'devtools');
		var strAppLink = HtmlRenderLink(strAppUrl,'<b>'+strAppName+'</b>',true);
		var strDependencyStatus = GetStringValue(GetValue(oPackage,'dependency_status'));
		strHtml +=  strAppLink + '<br/>';
		if (nLevel > 0)
		{
			if (strDependencyStatus != 'ok')
			{
				bError = true;
			}
			if (strDependencyStatus != 'circular')
			{
				strHtml += 'Compatible Version(s): ' + GetValue(oPackage,'compatible_versions');
				if (strDependencyStatus != 'missing')
				{
					strHtml += ' / ';
					strHtml += 'Installed version: ' + strVersion;
				}
				strHtml += ' / ';
			}
			
			function HtmlRenderDependencyStatus(strDependencyStatus)
			{
				switch (strDependencyStatus)
				{
					case 'ok':
						return '<span style="color: green; font-weight: bold;">OK</span>';
					case 'missing':
						return '<span style="color: red; font-weight: bold;">Package not installed!</span>';
					case 'incompatible_version':
						return '<span style="color: red; font-weight: bold;">Incompatible package version installed!</span>';
					case 'circular':
						return '<span style="color: red; font-weight: bold;">CIRCULAR DEPENDENCY DETECTED!</span>';
					default:
						return '<span style="color: red; font-weight: bold;">UNDEFINED</span>'
				}
			}
			
			strHtml += 'Status: ' + HtmlRenderDependencyStatus(strDependencyStatus);
		}

		var aDependencies = GetArrayValue(GetValue(oPackage,'_dependencies'));
	
		strHtml += '<p>Dependencies: '+ aDependencies.length +'</p>';
		
		strHtml += '</div>';
		
		for (var nDependency = 0; nDependency < aDependencies.length; nDependency++)
		{
			strHtml += HtmlRenderPackage(aDependencies[nDependency], nLevel+1);
		}
				
		return strHtml;
	}
	
	strHtml += HtmlRenderPackage(oPackage,0);
	if (bError == true)
	{
		strHtml =
			HtmlRenderError('At least one circular dependency, missing package or incompatible package version has been detected, see below for details!')
			+ '<div style="height: 10px;"></div>' 
			+ strHtml;
	}	
	
	//strHtml += HtmlRenderValue(oPackage);
	
	return strHtml;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-12-14 16:26:22</sys_created_on>
        <sys_id>23656a45db7f19106a03dad1f3961910</sys_id>
        <sys_name>HtmlRenderDependencies</sys_name>
        <sys_package display_value="DevTools" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_23656a45db7f19106a03dad1f3961910</sys_update_name>
    </sys_script_include>
</record_update>
